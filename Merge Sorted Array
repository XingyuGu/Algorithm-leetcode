------------------------------------------------------------
version 1
------------------------------------------------------------
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i = m-1, j = n-1, k = m+n-1;
        for(k = m+n-1; k >= 0; k--)
        {
            if(i >= 0 && j >=0)
            {
                if(nums1[i] >= nums2[j])
                {
                    nums1[k] = nums1[i];
                    i--;
                }
                else 
                {
                    nums1[k] = nums2[j];
                    j--;
                }
            }
            else
            {
                if(i >= 0)
                {
                    nums1[k] = nums1[i];
                    i--;
                }
                if(j >= 0)
                {
                    nums1[k] = nums2[j];
                    j--;
                }
            }
        }
    }
};
---------------------------------------------------
version 2
more clean
---------------------------------------------------
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i = m-1, j = n-1, k = m+n-1;
        while(i >= 0 && j >= 0)
        {
            if(nums1[i] >= nums2[j])
            {
                nums1[k--] = nums1[i--];//try to use this style.
            }
            else
            {
                nums1[k--] = nums2[j--];
            }
        }
        while(i >= 0)
        {
            nums1[k--] = nums1[i--];
        }
        while(j >= 0)
        {
            nums1[k--] = nums2[j--];
        }
}
};
